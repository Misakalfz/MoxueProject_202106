/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode dummyNode = new ListNode(0);
        ListNode cur = dummyNode;
        ArrayList<Integer> list = new ArrayList<Integer>();
        int extra = 0;
        while (l1 != null || l2 != null){
            int n1 = l1 == null ? 0 : l1.val;
            int n2 = l2 == null ? 0 : l2.val;
            int sum = n1 + n2 + extra;
            extra = sum / 10;
            sum = sum % 10; 
            list.add(sum);
            if (l1 != null){
                l1 = l1.next;
            }
            if (l2 != null){
            l2 = l2.next;
            }
        }
        if (extra != 0){
            list.add(extra);
        }
        for (int val : list){
            cur.next = new ListNode(val);
            cur = cur.next;
        }
        return dummyNode.next;

    }
}