class Solution {
    public int kthSmallest(int[][] matrix, int k) {
        int row = matrix.length;
        int col = matrix[0].length;
        int left = matrix[0][0], right = matrix[row - 1][col - 1];
        while(left < right){
            int mid = left + (right - left) / 2;
            if(check(matrix, mid, k, row)){
                right = mid;
            }
            else{
                left = mid + 1;
            }
        }
        return left;
        
    }
    public boolean check(int[][] matrix, int mid, int k, int row){
        //count 就是所有小于等于mid的元素个数；
        int i = row - 1, j = 0, count = 0;
        while(i >= 0 && j < matrix[0].length){
            if(matrix[i][j] <= mid){
                //i + 1，就是这一列的所有元素个数；
                count += i + 1;
                j++;
            }
            else{
                i--;
            }
        }
        //如果count大于等于k，说明这个K的元素在mid里；
        return count >= k;
    }
}